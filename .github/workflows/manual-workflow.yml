name: Manual Workflow

on:
  workflow_dispatch:
    inputs:
      test_id:
        description: "Select the test to run"
        type: choice
        options:
          - "0: CUSTOM TEST vs Stockfish"
          - "1: search_basic vs search_multithread"
          - "2: search_basic vs search_transposition_table"
          - "3: search_transposition_table vs search_tt_reductions"
          - "4: move_generator_basic vs move_generator_magic_bitboards"
          - "5: evaluation_dynamic vs evaluation_safety_mobility"
          - "6: Elo Performance Test vs Stockfish (1500 Elo)"
          - "7: Elo Performance Test vs Stockfish (1800 Elo)"
          - "8: Elo Performance Test vs Stockfish (2000 Elo)"
          - "9: Elo Performance Test vs Stockfish (2200 Elo)"
        default: "0: CUSTOM TEST vs Stockfish"
      game_settings:
        description: "Game settings in the format 'games=10,st=5,depth=5'"
        required: false
        default: "games=10,st=5,depth=5"
      engine2:
        description: "Select the engine2 in order to play versus AlphaDeepChess (only for CUSTOM TEST)"
        type: choice
        options:
          - Stockfish
          - AlphaDeepChess
        default: AlphaDeepChess
      stockfish_options2:
        description: "Options for Stockfish (only for CUSTOM TEST and if engine2 is Stockfish)"
        required: false
        default: "UCI_LimitStrength=true,UCI_Elo=2000"
      evaluation1:
        description: "Select the evaluation to use for engine1 (only for CUSTOM TEST)"
        type: choice
        options:
          - evaluation_dynamic
          - evaluation_safety_mobility
        default: evaluation_safety_mobility
      move_generator1:
        description: "Select the move generator to use for engine1 (only for CUSTOM TEST)"
        type: choice
        options:
          - move_generator_basic
          - move_generator_magic_bitboards
        default: move_generator_magic_bitboards
      search_algorithm1:
        description: "Select the search algorithm to use for engine1 (only for CUSTOM TEST)"
        type: choice
        options:
          - search_basic
          - search_multithread
          - search_transposition_table
          - search_tt_reductions
        default: search_tt_reductions
      evaluation2:
        description: "Select the evaluation to use for engine2 (only for CUSTOM TEST and if engine2 is AlphaDeepChess)"
        type: choice
        options:
          - evaluation_dynamic
          - evaluation_safety_mobility
        default: evaluation_safety_mobility
      move_generator2:
        description: "Select the move generator to use for engine2 (only for CUSTOM TEST and if engine2 is AlphaDeepChess)"
        type: choice
        options:
          - move_generator_basic
          - move_generator_magic_bitboards
        default: move_generator_magic_bitboards
      search_algorithm2:
        description: "Select the search algorithm to use for engine2 (only for CUSTOM TEST and if engine2 is AlphaDeepChess)"
        type: choice
        options:
          - search_basic
          - search_multithread
          - search_transposition_table
          - search_tt_reductions
        default: search_tt_reductions

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Qt dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libqt5core5a libqt5gui5 libqt5widgets5

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Extract numeric test_id
      id: extract_test_id
      run: |
        echo "TEST_ID=$(echo '${{ github.event.inputs.test_id }}' | cut -d':' -f1)" >> $GITHUB_ENV

    - name: Build with CMake (only release mode)
      run: |
        mkdir -p build/release
        cd build/release

        if [ "$TEST_ID" == "0" ]; then
          echo "Custom test"

          echo "Using AlphaDeepChess for engine 1"
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_EVALUATION_DYNAMIC=$([[ "${{ github.event.inputs.evaluation1 }}" == "evaluation_dynamic" ]] && echo ON || echo OFF) \
                -DUSE_EVALUATION_SAFETY_MOBILITY=$([[ "${{ github.event.inputs.evaluation1 }}" == "evaluation_safety_mobility" ]] && echo ON || echo OFF) \
                -DUSE_MOVE_GENERATOR_BASIC=$([[ "${{ github.event.inputs.move_generator1 }}" == "move_generator_basic" ]] && echo ON || echo OFF) \
                -DUSE_MOVE_GENERATOR_MAGIC_BITBOARDS=$([[ "${{ github.event.inputs.move_generator1 }}" == "move_generator_magic_bitboards" ]] && echo ON || echo OFF) \
                -DUSE_SEARCH_BASIC=$([[ "${{ github.event.inputs.search_algorithm1 }}" == "search_basic" ]] && echo ON || echo OFF) \
                -DUSE_SEARCH_MULTITHREAD=$([[ "${{ github.event.inputs.search_algorithm1 }}" == "search_multithread" ]] && echo ON || echo OFF) \
                -DUSE_SEARCH_TRANSPOSITION_TABLE=$([[ "${{ github.event.inputs.search_algorithm1 }}" == "search_transposition_table" ]] && echo ON || echo OFF) \
                -DUSE_SEARCH_TT_REDUCTIONS=$([[ "${{ github.event.inputs.search_algorithm1 }}" == "search_tt_reductions" ]] && echo ON || echo OFF) \
                -DEXECUTABLE_NAME=AlphaDeepChess_1 \
                ../..
          make

          if [ "${{ github.event.inputs.engine2 }}" == "Stockfish" ]; then
            echo "Using Stockfish for engine2"
          else
            echo "Using AlphaDeepChess engine for engine2"
            cmake -DCMAKE_BUILD_TYPE=Release \
                  -DUSE_EVALUATION_DYNAMIC=$([[ "${{ github.event.inputs.evaluation2 }}" == "evaluation_dynamic" ]] && echo ON || echo OFF) \
                  -DUSE_EVALUATION_SAFETY_MOBILITY=$([[ "${{ github.event.inputs.evaluation2 }}" == "evaluation_safety_mobility" ]] && echo ON || echo OFF) \
                  -DUSE_MOVE_GENERATOR_BASIC=$([[ "${{ github.event.inputs.move_generator2 }}" == "move_generator_basic" ]] && echo ON || echo OFF) \
                  -DUSE_MOVE_GENERATOR_MAGIC_BITBOARDS=$([[ "${{ github.event.inputs.move_generator2 }}" == "move_generator_magic_bitboards" ]] && echo ON || echo OFF) \
                  -DUSE_SEARCH_BASIC=$([[ "${{ github.event.inputs.search_algorithm2 }}" == "search_basic" ]] && echo ON || echo OFF) \
                  -DUSE_SEARCH_MULTITHREAD=$([[ "${{ github.event.inputs.search_algorithm2 }}" == "search_multithread" ]] && echo ON || echo OFF) \
                  -DUSE_SEARCH_TRANSPOSITION_TABLE=$([[ "${{ github.event.inputs.search_algorithm2 }}" == "search_transposition_table" ]] && echo ON || echo OFF) \
                  -DUSE_SEARCH_TT_REDUCTIONS=$([[ "${{ github.event.inputs.search_algorithm2 }}" == "search_tt_reductions" ]] && echo ON || echo OFF) \
                  -DEXECUTABLE_NAME=AlphaDeepChess_2 \
                  ../..
            make
          fi

        elif [ "$TEST_ID" == "1" ]; then
          echo "Running Test 1: search_basic vs search_multithread"
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_SEARCH_BASIC=ON \
                -DUSE_SEARCH_MULTITHREAD=OFF \
                -DUSE_SEARCH_TRANSPOSITION_TABLE=OFF \
                -DUSE_SEARCH_TT_REDUCTIONS=OFF \
                -DEXECUTABLE_NAME=AlphaDeepChess_search_basic \
                ../..
          make

          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_SEARCH_BASIC=OFF \
                -DUSE_SEARCH_MULTITHREAD=ON \
                -DUSE_SEARCH_TRANSPOSITION_TABLE=OFF \
                -DUSE_SEARCH_TT_REDUCTIONS=OFF \
                -DEXECUTABLE_NAME=AlphaDeepChess_search_multithread \
                ../..
          make

        elif [ "$TEST_ID" == "2" ]; then
          echo "Running Test 2: search_basic vs search_transposition_table"
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_SEARCH_BASIC=ON \
                -DUSE_SEARCH_MULTITHREAD=OFF \
                -DUSE_SEARCH_TRANSPOSITION_TABLE=OFF \
                -DUSE_SEARCH_TT_REDUCTIONS=OFF \
                -DEXECUTABLE_NAME=AlphaDeepChess_search_basic \
                ../..
          make

          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_SEARCH_BASIC=OFF \
                -DUSE_SEARCH_MULTITHREAD=OFF \
                -DUSE_SEARCH_TRANSPOSITION_TABLE=ON \
                -DUSE_SEARCH_TT_REDUCTIONS=OFF \
                -DEXECUTABLE_NAME=AlphaDeepChess_search_transposition_table \
                ../..
          make

        elif [ "$TEST_ID" == "3" ]; then
          echo "Running Test 3: search_transposition_table vs search_tt_reductions"
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_SEARCH_BASIC=OFF \
                -DUSE_SEARCH_MULTITHREAD=OFF \
                -DUSE_SEARCH_TRANSPOSITION_TABLE=ON \
                -DUSE_SEARCH_TT_REDUCTIONS=OFF \
                -DEXECUTABLE_NAME=AlphaDeepChess_search_transposition_table \
                ../..
          make

          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_SEARCH_BASIC=OFF \
                -DUSE_SEARCH_MULTITHREAD=OFF \
                -DUSE_SEARCH_TRANSPOSITION_TABLE=OFF \
                -DUSE_SEARCH_TT_REDUCTIONS=ON \
                -DEXECUTABLE_NAME=AlphaDeepChess_search_tt_reductions \
                ../..
          make

        elif [ "$TEST_ID" == "4" ]; then
          echo "Running Test 4: evaluation_dynamic vs evaluation_safety_mobility"
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_EVALUATION_DYNAMIC=ON \
                -DUSE_EVALUATION_SAFETY_MOBILITY=OFF \
                -DEXECUTABLE_NAME=AlphaDeepChess_evaluation_dynamic \
                ../..
          make

          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_EVALUATION_DYNAMIC=OFF \
                -DUSE_EVALUATION_SAFETY_MOBILITY=ON \
                -DEXECUTABLE_NAME=AlphaDeepChess_evaluation_safety_mobility \
                ../..
          make

        elif [ "$TEST_ID" == "5" ]; then
          echo "Running Test 5: evaluation_dynamic vs evaluation_safety_mobility"
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_MOVE_GENERATOR_BASIC=ON \
                -DUSE_MOVE_GENERATOR_MAGIC_BITBOARDS=OFF \
                -DEXECUTABLE_NAME=AlphaDeepChess_move_generator_basic \
                ../..
          make

          cmake -DCMAKE_BUILD_TYPE=Release \
                -DUSE_MOVE_GENERATOR_BASIC=OFF \
                -DUSE_MOVE_GENERATOR_MAGIC_BITBOARDS=ON \
                -DEXECUTABLE_NAME=AlphaDeepChess_move_generator_magic_bitboards \
                ../..
          make

        else
          echo "Running Test ${{ github.event.inputs.test_id }}"
          cmake -DCMAKE_BUILD_TYPE=Release ../..
          make
        fi
        
        cd ../..

    - name: Run setupComparator.py
      run: |
        if [[ "$TEST_ID" -ge 6 || ("$TEST_ID" == "0" && "${{ github.event.inputs.engine2 }}" == "Stockfish") ]]; then
          python setupComparator.py --download-stockfish
        else
          python setupComparator.py
        fi
    
    - name: Parse game settings
      id: parse_game_settings
      run: |
        echo "GAMES=$(echo '${{ github.event.inputs.game_settings }}' | grep -oP '(?<=games=)[^,]*')" >> $GITHUB_ENV
        echo "ST=$(echo '${{ github.event.inputs.game_settings }}' | grep -oP '(?<=st=)[^,]*')" >> $GITHUB_ENV
        echo "DEPTH=$(echo '${{ github.event.inputs.game_settings }}' | grep -oP '(?<=depth=)[^,]*')" >> $GITHUB_ENV

    - name: Run tests
      run: |
        python tests.py \
          --test-id $TEST_ID \
          --games $GAMES \
          --st $ST \
          --depth $DEPTH \
          --engine2 ${{ github.event.inputs.engine2 }} \
          --stockfish-options2 "${{ github.event.inputs.stockfish_options2 }}" \
          --positions positions.fen

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: engines-comparator-artifacts
        path: enginesComparator/*.*